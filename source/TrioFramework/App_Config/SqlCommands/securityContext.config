<?xml version="1.0" encoding="utf-8"?>
<commands xmlns="http://schemas.bingosoft.net/netframework/sqlcommand">

  <!--获取用户-->
  <command key="framework.securitycontext.getuser">
    <![CDATA[
    SELECT  [Id], [Name], [LoginId], [Email], [MobilePhone], [Sex], [Birthday],
            [Status], [OrgId] AS DeptId
    FROM    [dbo].[SEC_User]
    WHERE   [Id] = #Id#
    ]]>
  </command>

  <!-- 返回已登录用户所有信息，
         必须字段：Id,Name
         可选字段：Password,Email,MobilePhone,Sex,Age,Birthday 
         其他字段：除上面字段外返回的额外也可以通过安全上下文的用户对象获取
    -->
  <command key="Security.GetUserByLoginId">
    <![CDATA[
        select u.*,u.OrgId AS 'DeptId' from SEC_User u where u.LoginId = #LoginId#
    ]]>
  </command>


  <!-- 获取指定部门的角色人员 -->
  <command key="framework.securitycontext.getroleuserbyorg">
    <![CDATA[
        SELECT TOP 1 @OrgId = Id FROM dbo.SEC_Organization WHERE Name = #OrgName#
        SELECT  u.[Id], u.[Name], u.[LoginId], u.[Email], u.[MobilePhone], u.[Sex], u.[Birthday],
            u.[Status], u.[OrgId] AS DeptId
        FROM    dbo.SEC_User u
        WHERE   u.OrgId IN (SELECT Id FROM dbo.SEC_Organization WHERE Code like '%' + @OrgId + '%')
                AND EXISTS ( SELECT 1
                             FROM   dbo.SEC_Role r
                             INNER JOIN dbo.SEC_UserRole ur ON ur.RoleId = r.Id
                             WHERE  r.Name = #RoleName#
                                    AND ur.UserId = u.Id )
    ]]>
  </command>
  <!-- 获取角色人员 -->
  <command key="framework.securitycontext.getroleuser">
    <![CDATA[
        SELECT  u.[Id], u.[Name], u.[LoginId], u.[Email], u.[MobilePhone], u.[Sex], u.[Birthday],
            u.[Status], u.[OrgId] AS DeptId
        FROM    dbo.SEC_User u
        WHERE   EXISTS ( SELECT 1
                             FROM   dbo.SEC_Role r
                             INNER JOIN dbo.SEC_UserRole ur ON ur.RoleId = r.Id
                             WHERE  r.Name = #RoleName#
                                    AND ur.UserId = u.Id )
    ]]>
  </command>
  <!-- 判断用户是否在角色中 -->
  <command key="framework.securitycontext.isinrole">
    <![CDATA[
        SELECT COUNT(1) FROM dbo.SEC_UserRole sur
        INNER JOIN dbo.SEC_Role sr ON sur.RoleId = sr.Id
        WHERE sur.UserId = #UserId# AND sr.Name = #RoleName#
    ]]>
  </command>

  <!-- 判断用户是否属于某个部门 -->
  <command key="framework.securitycontext.isindept">
    <![CDATA[
    SELECT COUNT(1) FROM dbo.SEC_User su
    LEFT JOIN dbo.SEC_Organization so ON su.OrgId = so.Id
    WHERE su.Id = #UserId# AND (so.FullName LIKE '%$DeptName$.%' OR so.FullName LIKE '%.$DeptName$%' OR so.FullName LIKE '%$DeptName$%')
    ]]>
  </command>

  <!-- 根据部门id获取部门信息 -->
  <command key="framework.organization.get">
    <![CDATA[
        SELECT * FROM dbo.SEC_Organization WHERE Id = #Id#
    ]]>
  </command>

  <!-- 根据部门名称获取部门信息 -->
  <command key="framework.organization.getbyname">
    <![CDATA[
        SELECT * FROM dbo.SEC_Organization WHERE Name = #Name#
    ]]>
  </command>

  <!-- 返回用户登录所用的信息：目前只需登录密码，如果有用户状态，请过滤掉非启用状态的用户 -->
  <command key="Security.GetUserLoginInfo">
    <![CDATA[
        select Password 
          from SEC_User 
         where LoginId = #LoginId#
              and Status = 'enabled'
              {? and Type = #Type#}
    ]]>
  </command>

  <!-- 返回用户所拥有的所有角色，参数：UserId，返回字段：Id,Name -->
  <command key="Security.GetAllUserRoles">
    <![CDATA[
        SELECT ur.RoleID AS Id, sr.Name
        FROM   SEC_UserRole AS ur 
				INNER JOIN sec_role AS sr ON ur.RoleID = sr.Id
        WHERE  (ur.UserID = #UserId#)
    ]]>
  </command>

  <!-- 返回用户所拥有的所有操作权限，参数：UserId，UserRoles:用户所有角色的字符串，多个以逗号隔开
         返回字段：Operation,Name,Url,Rule,Priority,ElementId,Behaviour
    -->
  <command key="Security.GetAllUserPermissions">
    <![CDATA[
	   SELECT sp.code Operation,sp.Name,
			   '$Env:AppPath$'+(case when sp.url is null then (select url from SEC_Permission where id = sp.Parent) else sp.url end) as Url,
                sr.[Rule],sr.Behaviour,sr.Priority,sp.ElementId
        FROM SEC_RolePermission AS rp 
                INNER JOIN SEC_Permission  AS sp ON rp.OperationId = sp.Id 
                LEFT  JOIN SEC_PermissionRule AS sr ON rp.RuleId    = sr.Id
        WHERE rp.RoleId in ($UserRoles?''$)
    ]]>
  </command>

  <!-- 返回系统注册的所有受控Url访问权限(Url必须以'/'开头），参数：无，
         返回字段：Operation,Name,Url
    -->
  <command key="Security.GetAllUrlPermissions">
    <![CDATA[
        SELECT code Operation,Name,'$Env:AppPath$'+Url as Url
        FROM SEC_Permission 
        WHERE Url LIKE '/%'
		  AND Type = 'Page'
    ]]>
  </command>

  <!-- 返回系统注册的所有受控页面元素-->
  <command key="Security.GetAllUIPermissions">
    <![CDATA[
        SELECT p1.Code Operation,
			   p1.Name,
			   p1.Parent,
			   '$Env:AppPath$'+(case when p1.url is null then (select url from SEC_Permission where Id = p1.Parent) else p1.url end) as Url,
			   p1.ElementId,
			   p1.ElementBehaviour 
		 FROM SEC_Permission AS p1 
        WHERE p1.Type = 'Element'
		  and p1.ElementId is not null
    ]]>
  </command>

</commands>