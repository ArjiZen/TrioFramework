<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bingosoft.TrioFramework</name>
    </assembly>
    <members>
        <member name="T:Bingosoft.TrioFramework.Attributes.ActivityAttribute">
            <summary>
            流程环节配置特性
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Attributes.ActivityAttribute.#ctor(System.String)">
            <summary>
            流程环节配置特性
            </summary>
            <param name="activityName"></param>
        </member>
        <member name="M:Bingosoft.TrioFramework.Attributes.ActivityAttribute.#ctor(System.String,System.Int32)">
            <summary>
            流程环节配置
            </summary>
            <param name="activityName">环节名</param>
            <param name="version">流程对应版本号</param>
        </member>
        <member name="P:Bingosoft.TrioFramework.Attributes.ActivityAttribute.ActivityName">
            <summary>
            环节名称
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Attributes.ActivityAttribute.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Attributes.WorkflowAttribute">
            <summary>
            用于标示当前配置所属流程
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Attributes.WorkflowAttribute.#ctor(System.Int32)">
            <summary>
            标示当前配置所属流程
            </summary>
            <param name="appCode">流程编号</param>
        </member>
        <member name="P:Bingosoft.TrioFramework.Attributes.WorkflowAttribute.AppCode">
            <summary>
            流程编号
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Communication.TrioFileMessage">
            <summary>
            用于传输文件流的消息对象
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Communication.TrioMessage">
            <summary>
            用于Web站点于前端通讯的消息对象
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.ToString">
            <summary>
            序列化消息实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.Succeed(System.Object)">
            <summary>
            返回标识操作成功的消息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.Succeed(System.String)">
            <summary>
            返回标识操作成功的消息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.Error(System.Int32,System.String)">
            <summary>
            返回标识操作失败的消息
            </summary>
            <param name="code">错误码</param>
            <param name="errMsg">错误消息</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.FromStream(System.IO.Stream,System.Int64)">
            <summary>
            创建传输文件流的消息对象
            </summary>
            <param name="stream">文件流</param>
            <param name="fileSize">文件长度</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.ToStream">
            <summary>
            将当前消息中的数据转为流
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioMessage.ToBuffer">
            <summary>
            将当前消息中的数据转为字节
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bingosoft.TrioFramework.Communication.TrioMessage.Success">
            <summary>
            是否操作成功
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Communication.TrioMessage.Data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Communication.TrioMessage.ErrCode">
            <summary>
            错误编码
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Communication.TrioMessage.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Communication.TrioFileMessage.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            实例化文件流传输对象
            </summary>
            <param name="stream">文件流</param>
            <param name="fileSize">文件长度</param>
        </member>
        <member name="T:Bingosoft.TrioFramework.Config.ExcelElement">
            <summary>
            Excel组件配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Config.ExcelElement.Assembly">
            <summary>
            实现程序集
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.TrioComponentSection">
            <summary>
            Trio组件配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.TrioComponentSection.Excel">
            <summary>
            Excel配置
            </summary>
        </member>
        <member name="T:ExceptionExtension">
            <summary>
            异常扩展
            </summary>
        </member>
        <member name="M:ExceptionExtension.GetAllMessage(System.Exception)">
            <summary>
            获取完整的错误信息
            </summary>
            <param name="ex">异常</param>
            <returns></returns>
        </member>
        <member name="M:ExceptionExtension.GetMessages(System.Exception)">
            <summary>
            获取所有错误信息
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:ExceptionExtension.GetStackTraces(System.Exception)">
            <summary>
            获取所有堆栈信息
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:SecurityContextExtension">
            <summary>
            安全上下文扩展
            </summary>
        </member>
        <member name="M:SecurityContextExtension.Get(Bingosoft.Security.ISecurityProvider,System.String)">
            <summary>
            根据 loginid 或 userid 获取指定人员
            </summary>
            <param name="provider"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SecurityContextExtension.GetRoleUsers(Bingosoft.Security.ISecurityProvider,System.String,System.String)">
            <summary>
            获取该部门的角色用户
            </summary>
            <param name="provider"></param>
            <param name="roleName">角色名</param>
            <param name="orgName">部门名称</param>
            <returns></returns>
        </member>
        <member name="M:SecurityContextExtension.GetRoleUsers(Bingosoft.Security.ISecurityProvider,System.String)">
            <summary>
            获取该部门的角色用户
            </summary>
            <param name="provider"></param>
            <param name="roleName">角色名</param>
            <returns></returns>
        </member>
        <member name="M:SecurityContextExtension.InRole(Bingosoft.Security.Principal.IUser,System.String)">
            <summary>
            判断当前用户是否在某个角色中
            </summary>
            <param name="user"></param>
            <param name="roleName">角色名</param>
            <returns></returns>
        </member>
        <member name="M:SecurityContextExtension.IsInDept(Bingosoft.Security.Principal.IUser,System.String)">
            <summary>
            判断用户是否属于某个部门
            </summary>
            <param name="user"></param>
            <param name="deptName"></param>
            <returns></returns>
        </member>
        <member name="M:SecurityContextExtension.GetOrganization(Bingosoft.Security.ISecurityProvider,System.String)">
            <summary>
            获取部门信息
            </summary>
            <param name="provider"></param>
            <param name="id">部门id</param>
            <returns></returns>
        </member>
        <member name="M:SecurityContextExtension.GetOrganizationByName(Bingosoft.Security.ISecurityProvider,System.String)">
            <summary>
            根据名称获取部门信息
            </summary>
            <param name="provider"></param>
            <param name="name">部门名称</param>
            <returns></returns>
        </member>
        <member name="T:StreamExtension">
            <summary>
            流扩展方法
            </summary>
        </member>
        <member name="M:StreamExtension.ReadBytes(System.IO.Stream,System.Int64)">
            <summary>
            从流中读取所有字节
            </summary>
            <param name="stream"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:StringExtension">
            <summary>
            字符串扩展
            </summary>
        </member>
        <member name="M:StringExtension.Concat(System.Int32[],System.Char)">
            <summary>
            将整形数组拼接成字符串
            </summary>
            <param name="array"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:StringExtension.ToInt(System.String)">
            <summary>
            转为int类型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:StringExtension.ValidIsEmpty(System.String,System.String)">
            <summary>
            字符串是否为空，并返回错误信息
            </summary>
            <param name="str"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:StringExtension.IsEmpty(System.String)">
            <summary>
            判断字符串是否为空
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:StringExtension.EqualsWith(System.String,System.String)">
            <summary>
            忽略大小写判断字符串是否相等
            </summary>
            <param name="str"></param>
            <param name="target"></param>
        </member>
        <member name="T:Bingosoft.TrioFramework.Logger">
            <summary>
            日志记录
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogOperator(System.String,Bingosoft.TrioFramework.Logger.BusinessAction,System.String)">
            <summary>
            记录操作日志
            </summary>
            <param name="module">所属模块</param>
            <param name="action">操作类型</param>
            <param name="content">操作内容</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogOperator(System.String,Bingosoft.TrioFramework.Logger.BusinessAction,System.String,System.Exception)">
            <summary>
            记录操作日志
            </summary>
            <param name="module">所属模块</param>
            <param name="action">操作类型</param>
            <param name="content">操作内容</param>
            <param name="ex">异常</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogError(System.String,System.Exception,System.Object)">
            <summary>
            记录错误日志
            </summary>
            <param name="module">所属模块</param>
            <param name="ex">异常</param>
            <param name="extraData">附加数据</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogError(System.String,System.String,System.Exception,System.Object)">
            <summary>
            记录错误日志
            </summary>
            <param name="module">所属模块</param>
            <param name="errorMessage">错误信息</param>
            <param name="ex">异常</param>
            <param name="extraData">附加数据</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogServiceRequest(System.String,System.String,System.String)">
            <summary>
            记录接口调用日志的请求内容
            </summary>
            <returns>记录的日志id.</returns>
            <param name="module">所属模块.</param>
            <param name="interfaceName">接口名.</param>
            <param name="content">请求内容.</param>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogServiceResponse(System.Int64,System.String)">
            <summary>
            记录接口调用日志的返回结果
            </summary>
            <param name="logid">日志id.</param>
            <param name="responseContent">接口返回内容.</param>
        </member>
        <member name="M:Bingosoft.TrioFramework.Logger.LogServiceResponse(System.Int64,System.Exception)">
            <summary>
            记录接口调用日志的返回结果
            </summary>
            <param name="logid">日志id.</param>
            <param name="ex">接口调用异常对象.</param>
        </member>
        <member name="T:Bingosoft.TrioFramework.Logger.BaseLog">
            <summary>
            日志基类
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.BaseLog.Application">
            <summary>
            所属应用
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.BaseLog.Module">
            <summary>
            所属模块
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.BaseLog.Actor">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Logger.OperatorLog">
            <summary>
            操作日志
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.OperatorLog.Action">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.OperatorLog.ActionContent">
            <summary>
            操作内容
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.OperatorLog.ActionTime">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.OperatorLog.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.OperatorLog.ExceptionType">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Logger.OperatorLog.ExceptionMsg">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Logger.BusinessAction">
            <summary>
            业务数据操作类型
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Logger.BusinessAction.添加">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Logger.BusinessAction.删除">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Logger.BusinessAction.修改">
            <summary>
            修改
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Logger.BusinessAction.查询">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Logger.BusinessAction.下载">
            <summary>
            下载
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Logger.BusinessAction.其他">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Models.DictionaryItem">
            <summary>
            字典项
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.DictionaryItem.Code">
            <summary>
            字典编码
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.DictionaryItem.Text">
            <summary>
            字典文本
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.Models.DictionaryCollection">
            <summary>
            字典集合
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Models.DictionaryCollection.#ctor">
            <summary>
            实例化字典集合
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Models.DictionaryCollection.#ctor(System.Collections.Generic.IList{Bingosoft.TrioFramework.Models.DictionaryItem})">
            <summary>
            实例化字典集合
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Bingosoft.TrioFramework.Models.DictionaryCollection.ContainsCode(System.String)">
            <summary>
            包含字典项变啊
            </summary>
            <param name="code">字典项编码</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Models.DictionaryCollection.GetByCode(System.String)">
            <summary>
            根据字典编码获取字典项集合
            </summary>
            <param name="code">字典编码</param>
            <returns></returns>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.DictionaryCollection.Item(System.String)">
            <summary>
            获取字典值
            </summary>
            <param name="code">字典编码</param>
            <returns></returns>
        </member>
        <member name="T:Bingosoft.TrioFramework.Models.Organization">
            <summary>
            组织架构
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.Models.Organization._parent">
            <summary>
            父部门
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.Models.Organization.Load(System.String)">
            <summary>
            加载部门信息
            </summary>
            <param name="id">部门id</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.Models.Organization.LoadByName(System.String)">
            <summary>
            根据名称获取部门信息
            </summary>
            <param name="name">部门名称</param>
            <returns></returns>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Id">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.ParentId">
            <summary>
            父部门Id
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Parent">
            <summary>
            父部门
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Name">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Code">
            <summary>
            部门编码
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.FullName">
            <summary>
            部门完整名称
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Level">
            <summary>
            部门所在级别
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Order">
            <summary>
            部门显示顺序
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Type">
            <summary>
            部门类型
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.Models.Organization.Status">
            <summary>
            部门状态
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.ParamContainer">
            <summary>
            系统参数容器
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.ParamContainer.Get(System.String,System.String)">
            <summary>
            获取系统参数
            </summary>
            <param name="code">参数编码</param>
            <param name="defaultVal">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.ParamContainer.Update(System.String,System.String)">
            <summary>
            更新系统参数
            </summary>
            <param name="code">参数编码</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="T:Bingosoft.TrioFramework.RestClient">
            <summary>
            给予Rest服务的请求客户端
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.RestClient.CONTENT_TYPE_DEFAULT">
            <summary>
            默认的请求内容格式
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.RestClient.CONTENT_TYPE_STREAM">
            <summary>
            用于文件流的请求内容格式
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.RestClient.#ctor(System.String)">
            <summary>
            创建Rest客户端
            </summary>
            <param name="apiBaseUrl">API基地址（不包含具体调用方法）</param>
        </member>
        <member name="M:Bingosoft.TrioFramework.RestClient.Login(System.String)">
            <summary>
            登录
            </summary>
            <param name="loginid">登录用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.RestClient.Open(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            请求接口
            </summary>
            <param name="action">接口地址</param>
            <param name="queryString">接口参数</param>
            <param name="method">HTTP方法</param>
            <param name="contentLength">请求内容长度（只有QueryString情况下为0）</param>
            <param name="contentType">请求内容格式</param>
            <returns></returns>
        </member>
        <member name="M:Bingosoft.TrioFramework.RestClient.Open(System.String,System.Byte[],System.String,System.String,System.String)">
            <summary>
            请求接口
            </summary>
            <param name="action">接口地址</param>
            <param name="formData">请求的FormData数据</param>
            <param name="queryString">接口参数</param>
            <param name="method">HTTP方法</param>
            <param name="contentType">请求内容格式</param>
            <returns></returns>
        </member>
        <member name="P:Bingosoft.TrioFramework.RestClient.BaseUrl">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.SettingProvider">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.TrioSettings">
            <summary>
            服务配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.Common">
            <summary>
            通用配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.PendingJob">
            <summary>
            推送待办配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.Workflow">
            <summary>
            工作流配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.FileServer">
            <summary>
            文件服务器配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.TrioComponentSettings">
            <summary>
            组件配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.SettingProvider.Excel">
            <summary>
            Excel导出组件配置
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.TrioSection">
            <summary>
            Trio配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.TrioSection.Common">
            <summary>
            Windows服务配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.TrioSection.PendingJob">
            <summary>
            推送待办配置
            </summary>
            <value>The pending job.</value>
        </member>
        <member name="P:Bingosoft.TrioFramework.TrioSection.FileServer">
            <summary>
            文件服务器配置
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.TrioSection.Workflow">
            <summary>
            流程配置
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.PendingJobElement">
            <summary>
            推送待办配置
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.PendingJobElement.#ctor">
            <summary>
            实例化任务推送配置节点
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.PendingJobElement.IsEnabled">
            <summary>
            是否启用推送待办
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.PendingJobElement.IsEnabledSMS">
            <summary>
            是否启用发送短信
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.PendingJobElement.ApiUrl">
            <summary>
            接口地址
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.PendingJobElement.JobUrl">
            <summary>
            待办地址
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.CommonElement">
            <summary>
            Trio服务配置
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.CommonElement.#ctor">
            <summary>
            实例化通用配置节点
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.CommonElement.SystemId">
            <summary>
            系统编码
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.CommonElement.SystemAccount">
            <summary>
            系统编码
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.CommonElement.SystemPassword">
            <summary>
            系统密码
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.CommonElement.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.CommonElement.EncryptKey">
            <summary>
            RC4加密Key
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.WorkflowElement">
            <summary>
            流程配置节点
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.WorkflowElement.#ctor">
            <summary>
            实例化流程配置节点
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.WorkflowElement.Provider">
            <summary>
            流程引擎提供者
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.WorkflowElement.IsConnectK2">
            <summary>
            是否连接K2服务器
            </summary>
        </member>
        <member name="T:Bingosoft.TrioFramework.FileServerElement">
            <summary>
            文件服务器配置
            </summary>
        </member>
        <member name="M:Bingosoft.TrioFramework.FileServerElement.#ctor">
            <summary>
            实例化文件服务器配置节点
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.FileServerElement.Server">
            <summary>
            文件服务器地址
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.FileServerElement.UserName">
            <summary>
            登录用户名
            </summary>
        </member>
        <member name="P:Bingosoft.TrioFramework.FileServerElement.Password">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="T:TypeExtension">
            <summary>
            类型扩展方法
            </summary>
        </member>
        <member name="M:TypeExtension.GetFirstAttr``1(System.Type)">
            <summary>
            获取第一个该类型的特性
            </summary>
            <typeparam name="T">特性类型</typeparam>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="T:Bingosoft.TrioFramework.TrioVer">
            <summary>
            Trio版本号
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.TrioVer.Core">
            <summary>
            TrioFramework核心框架版本号
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.TrioVer.Workflow">
            <summary>
            工作流组件版本号
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.TrioVer.K2Workflow">
            <summary>
            K2工作流版本号
            </summary>
        </member>
        <member name="F:Bingosoft.TrioFramework.TrioVer.ExcelComponent">
            <summary>
            Excel组件版本号
            </summary>
        </member>
    </members>
</doc>
